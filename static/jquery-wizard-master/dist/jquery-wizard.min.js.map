{"version":3,"sources":["jquery-wizard.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryWizardEs","this","_jquery","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","emulateTransitionEnd","$el","duration","called","one","support","transition","end","setTimeout","trigger","_jquery2","obj","__esModule","default","_interopRequireDefault","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","DEFAULTS","step","getPane","index","$element","find","children","eq","buttonsAppendTo","templates","buttons","options","id","buttonLabels","back","next","finish","classes","done","error","active","disabled","activing","loading","pane","button","hide","autoFocus","keyboard","enableWhenVisited","show","fail","cacheContent","validator","onInit","onNext","onBack","onReset","onBeforeShow","onAfterShow","onBeforeHide","onAfterHide","onBeforeLoad","onAfterLoad","onBeforeChange","onAfterChange","onStateChange","onFinish","events","WebkitTransition","MozTransition","OTransition","animation","WebkitAnimation","MozAnimation","OAnimation","prefixes","style","get","tests","csstransitions","Boolean","test","cssanimations","property","prefixed","result","upper","charAt","toUpperCase","slice","undefined","each","prefix","toLowerCase","String","Step","element","wizard","TRANSITION_DURATION","initialize","value","loader","loaded","states","data","$pane","getPaneFromTarget","call","setValidatorFromData","setLoaderFromData","selector","attr","replace","current","currentIndex","enter","load","is","addClass","removeClass","callback","complete","leave","isFunction","proxy","empty","setContent","content","that","html","hasOwnProperty","ajax","url","settings","event","_wizard","_len","arguments","args","_key","_events$event","apply","concat","state","window","goTo","handler","push","f","setup","counter","extend","$steps","steps","_current","transitioning","on","e","preventDefault","stopPropagation","document","keydown","$buttons","updateButtons","$to","appendTo","$back","$next","$finish","lastIndex","_this","tagName","which","eventType","_len2","params","_key2","NAMESPACE$1","onFunction","word","substring","to","validate","process","updateSteps","$input","focus"],"mappings":"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","file":"jquery-wizard.min.js","sourcesContent":["/**\n* jQuery wizard v0.4.4\n* https://github.com/amazingSurge/jquery-wizard\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\n/*eslint no-unused-vars: \"off\"*/\n/*eslint no-empty-function: \"off\"*/\nvar DEFAULTS = {\n  step: '.wizard-steps > li',\n\n  getPane: function(index, step) {\n    return this.$element.find('.wizard-content').children().eq(index);\n  },\n\n  buttonsAppendTo: 'this',\n  templates: {\n    buttons: function() {\n      const options = this.options;\n      return `<div class=\"wizard-buttons\"><a class=\"wizard-back\" href=\"#${this.id}\" data-wizard=\"back\" role=\"button\">${options.buttonLabels.back}</a><a class=\"wizard-next\" href=\"#${this.id}\" data-wizard=\"next\" role=\"button\">${options.buttonLabels.next}</a><a class=\"wizard-finish\" href=\"#${this.id}\" data-wizard=\"finish\" role=\"button\">${options.buttonLabels.finish}</a></div>`;\n    }\n  },\n\n  classes: {\n    step: {\n      done: 'done',\n      error: 'error',\n      active: 'current',\n      disabled: 'disabled',\n      activing: 'activing',\n      loading: 'loading'\n    },\n\n    pane: {\n      active: 'active',\n      activing: 'activing'\n    },\n\n    button: {\n      hide: 'hide',\n      disabled: 'disabled'\n    }\n  },\n\n  autoFocus: true,\n  keyboard: true,\n\n  enableWhenVisited: false,\n\n  buttonLabels: {\n    next: 'Next',\n    back: 'Back',\n    finish: 'Finish'\n  },\n\n  loading: {\n    show: function(step) { },\n    hide: function(step) { },\n    fail: function(step) { }\n  },\n\n  cacheContent: false,\n\n  validator: function(step) {\n    return true;\n  },\n\n  onInit: null,\n  onNext: null,\n  onBack: null,\n  onReset: null,\n\n  onBeforeShow: null,\n  onAfterShow: null,\n  onBeforeHide: null,\n  onAfterHide: null,\n  onBeforeLoad: null,\n  onAfterLoad: null,\n\n  onBeforeChange: null,\n  onAfterChange: null,\n\n  onStateChange: null,\n\n  onFinish: null\n};\n\n/**\n * Css features detect\n **/\nlet support = {};\n\n((support) => {\n  /**\n   * Borrowed from Owl carousel\n   **/\n  const events = {\n      transition: {\n        end: {\n          WebkitTransition: 'webkitTransitionEnd',\n          MozTransition: 'transitionend',\n          OTransition: 'oTransitionEnd',\n          transition: 'transitionend'\n        }\n      },\n      animation: {\n        end: {\n          WebkitAnimation: 'webkitAnimationEnd',\n          MozAnimation: 'animationend',\n          OAnimation: 'oAnimationEnd',\n          animation: 'animationend'\n        }\n      }\n    },\n    prefixes = ['webkit', 'Moz', 'O', 'ms'],\n    style = $('<support>').get(0).style,\n    tests = {\n      csstransitions() {\n        return Boolean(test('transition'));\n      },\n      cssanimations() {\n        return Boolean(test('animation'));\n      }\n    };\n\n  const test = (property, prefixed) => {\n    let result = false,\n      upper = property.charAt(0).toUpperCase() + property.slice(1);\n\n    if (style[property] !== undefined) {\n      result = property;\n    }\n    if (!result) {\n      $.each(prefixes, (i, prefix) => {\n        if (style[prefix + upper] !== undefined) {\n          result = `-${prefix.toLowerCase()}-${upper}`;\n          return false;\n        }\n        return true;\n      });\n    }\n\n    if (prefixed) {\n      return result;\n    }\n    if (result) {\n      return true;\n    }\n    return false;\n  };\n\n  const prefixed = (property) => {\n    return test(property, true);\n  };\n\n  if (tests.csstransitions()) {\n    /*eslint no-new-wrappers: \"off\"*/\n    support.transition = new String(prefixed('transition'));\n    support.transition.end = events.transition.end[support.transition];\n  }\n\n  if (tests.cssanimations()) {\n    /*eslint no-new-wrappers: \"off\"*/\n    support.animation = new String(prefixed('animation'));\n    support.animation.end = events.animation.end[support.animation];\n  }\n})(support);\n\nfunction emulateTransitionEnd ($el, duration) {\n    'use strict';\n  let called = false;\n\n  $el.one(support.transition.end, () => {\n    called = true;\n  });\n  const callback = () => {\n    if (!called) {\n      $el.trigger(support.transition.end);\n    }\n  };\n  setTimeout(callback, duration);\n}\n\nclass Step {\n  constructor(element, wizard, index) {\n    this.TRANSITION_DURATION = 200;\n\n    this.initialize(element, wizard, index);\n  }\n\n  initialize(element, wizard, index) {\n\n    this.$element = $(element);\n    this.wizard = wizard;\n\n    this.events = {};\n    this.loader = null;\n    this.loaded = false;\n\n    this.validator = this.wizard.options.validator;\n\n    this.states = {\n      done: false,\n      error: false,\n      active: false,\n      disabled: false,\n      activing: false\n    };\n\n    this.index = index;\n    this.$element.data('wizard-index', index);\n\n\n    this.$pane = this.getPaneFromTarget();\n\n    if (!this.$pane) {\n      this.$pane = this.wizard.options.getPane.call(this.wizard, index, element);\n    }\n\n    this.setValidatorFromData();\n    this.setLoaderFromData();\n  }\n\n  getPaneFromTarget() {\n    let selector = this.$element.data('target');\n\n    if (!selector) {\n      selector = this.$element.attr('href');\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '');\n    }\n\n    if (selector) {\n      return $(selector);\n    }\n    return null;\n  }\n\n  setup() {\n    const current = this.wizard.currentIndex();\n    if (this.index === current) {\n      this.enter('active');\n\n      if (this.loader) {\n        this.load();\n      }\n    } else if (this.index > current) {\n      this.enter('disabled');\n    }\n\n    this.$element.attr('aria-expanded', this.is('active'));\n    this.$pane.attr('aria-expanded', this.is('active'));\n\n    const classes = this.wizard.options.classes;\n    if (this.is('active')) {\n      this.$pane.addClass(classes.pane.active);\n    } else {\n      this.$pane.removeClass(classes.pane.active);\n    }\n  }\n\n  show(callback) {\n    if (this.is('activing') || this.is('active')) {\n      return;\n    }\n\n    this.trigger('beforeShow');\n    this.enter('activing');\n\n    const classes = this.wizard.options.classes;\n\n    this.$element\n      .attr('aria-expanded', true);\n\n    this.$pane\n      .addClass(classes.pane.activing)\n      .addClass(classes.pane.active)\n      .attr('aria-expanded', true);\n\n    const complete = function () {\n      this.$pane.removeClass(classes.pane.activing);\n\n      this.leave('activing');\n      this.enter('active');\n      this.trigger('afterShow');\n\n      if ($.isFunction(callback)) {\n        callback.call(this);\n      }\n    };\n\n    if (!support.transition) {\n      complete.call(this);\n      return;\n    }\n\n    this.$pane.one(support.transition.end, $.proxy(complete, this));\n\n    emulateTransitionEnd(this.$pane, this.TRANSITION_DURATION);\n  }\n\n  hide(callback) {\n    if (this.is('activing') || !this.is('active')) {\n      return;\n    }\n\n    this.trigger('beforeHide');\n    this.enter('activing');\n\n    const classes = this.wizard.options.classes;\n\n    this.$element\n      .attr('aria-expanded', false);\n\n    this.$pane\n      .addClass(classes.pane.activing)\n      .removeClass(classes.pane.active)\n      .attr('aria-expanded', false);\n\n    const complete = function () {\n      this.$pane\n        .removeClass(classes.pane.activing);\n\n      this.leave('activing');\n      this.leave('active');\n      this.trigger('afterHide');\n\n      if ($.isFunction(callback)) {\n        callback.call(this);\n      }\n    };\n\n    if (!support.transition) {\n      complete.call(this);\n      return;\n    }\n\n    this.$pane.one(support.transition.end, $.proxy(complete, this));\n\n    emulateTransitionEnd(this.$pane, this.TRANSITION_DURATION);\n  }\n\n  empty() {\n    this.$pane.empty();\n  }\n\n  load(callback) {\n    const that = this;\n    let loader = this.loader;\n\n    if ($.isFunction(loader)) {\n      loader = loader.call(this.wizard, this);\n    }\n\n    if (this.wizard.options.cacheContent && this.loaded) {\n      if ($.isFunction(callback)) {\n        callback.call(this);\n      }\n      return;\n    }\n\n    this.trigger('beforeLoad');\n    this.enter('loading');\n\n    function setContent(content) {\n      that.$pane.html(content);\n\n      that.leave('loading');\n      that.loaded = true;\n      that.trigger('afterLoad');\n\n      if ($.isFunction(callback)) {\n        callback.call(that);\n      }\n    }\n\n    if (typeof loader === 'string') {\n      setContent(loader);\n    } else if (typeof loader === 'object' && loader.hasOwnProperty('url')) {\n      that.wizard.options.loading.show.call(that.wizard, that);\n\n      $.ajax(loader.url, loader.settings || {}).done(data => {\n        setContent(data);\n\n        that.wizard.options.loading.hide.call(that.wizard, that);\n      }).fail(() => {\n        that.wizard.options.loading.fail.call(that.wizard, that);\n      });\n    } else {\n      setContent('');\n    }\n  }\n\n  trigger(event, ...args) {\n\n    if ($.isArray(this.events[event])) {\n      for (const i in this.events[event]) {\n        if ({}.hasOwnProperty.call(this.events[event], i)) {\n          this.events[event][i](...args);\n        }\n      }\n    }\n\n    this.wizard.trigger(...[event, this].concat(args));\n  }\n\n  enter(state) {\n    this.states[state] = true;\n\n    const classes = this.wizard.options.classes;\n    this.$element.addClass(classes.step[state]);\n\n    this.trigger('stateChange', true, state);\n  }\n\n  leave(state) {\n    if (this.states[state]) {\n      this.states[state] = false;\n\n      const classes = this.wizard.options.classes;\n      this.$element.removeClass(classes.step[state]);\n\n      this.trigger('stateChange', false, state);\n    }\n  }\n\n  setValidatorFromData() {\n    const validator = this.$pane.data('validator');\n    if (validator && $.isFunction(window[validator])) {\n      this.validator = window[validator];\n    }\n  }\n\n  setLoaderFromData() {\n    const loader = this.$pane.data('loader');\n\n    if (loader) {\n      if ($.isFunction(window[loader])) {\n        this.loader = window[loader];\n      }\n    } else {\n      const url = this.$pane.data('loader-url');\n      if (url) {\n        this.loader = {\n          url,\n          settings: this.$pane.data('settings') || {}\n        };\n      }\n    }\n  }\n\n  /*\n   * Public methods below\n   */\n  active() {\n    return this.wizard.goTo(this.index);\n  }\n\n  on(event, handler) {\n    if ($.isFunction(handler)) {\n      if ($.isArray(this.events[event])) {\n        this.events[event].push(handler);\n      } else {\n        this.events[event] = [handler];\n      }\n    }\n\n    return this;\n  }\n\n  off(event, handler) {\n    if ($.isFunction(handler) && $.isArray(this.events[event])) {\n      $.each(this.events[event], function (i, f) {\n        /*eslint consistent-return: \"off\"*/\n        if (f === handler) {\n          delete this.events[event][i];\n          return false;\n        }\n      });\n    }\n\n    return this;\n  }\n\n  is(state) {\n    return this.states[state] && this.states[state] === true;\n  }\n\n  reset() {\n    for (const state in this.states) {\n      if ({}.hasOwnProperty.call(this.states, state)) {\n        this.leave(state);\n      }\n    }\n    this.setup();\n\n    return this;\n  }\n\n  setLoader(loader) {\n    this.loader = loader;\n\n    if (this.is('active')) {\n      this.load();\n    }\n\n    return this;\n  }\n\n  setValidator(validator) {\n    if ($.isFunction(validator)) {\n      this.validator = validator;\n    }\n\n    return this;\n  }\n\n  validate() {\n    return this.validator.call(this.$pane.get(0), this);\n  }\n}\n\nlet counter = 0;\nconst NAMESPACE$1 = 'wizard';\n\nclass wizard {\n  constructor(element, options = {}) {\n    this.$element = $(element);\n\n    this.options = $.extend(true, {}, DEFAULTS, options);\n\n    this.$steps = this.$element.find(this.options.step);\n\n    this.id = this.$element.attr('id');\n    if (!this.id) {\n      this.id = `wizard-${++counter}`;\n      this.$element.attr('id', this.id);\n    }\n\n    this.trigger('init');\n\n    this.initialize();\n  }\n\n  initialize() {\n    this.steps = [];\n    const that = this;\n\n    this.$steps.each(function (index) {\n      that.steps.push(new Step(this, that, index));\n    });\n\n    this._current = 0;\n    this.transitioning = null;\n\n    $.each(this.steps, (i, step) => {\n      step.setup();\n    });\n\n    this.setup();\n\n    this.$element.on('click', this.options.step, function (e) {\n      const index = $(this).data('wizard-index');\n\n      if (!that.get(index).is('disabled')) {\n        that.goTo(index);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    });\n\n    if (this.options.keyboard) {\n      $(document).on('keyup', $.proxy(this.keydown, this));\n    }\n\n    this.trigger('ready');\n  }\n\n  setup() {\n    this.$buttons = $(this.options.templates.buttons.call(this));\n\n    this.updateButtons();\n\n    const buttonsAppendTo = this.options.buttonsAppendTo;\n    let $to;\n    if (buttonsAppendTo === 'this') {\n      $to = this.$element;\n    } else if ($.isFunction(buttonsAppendTo)) {\n      $to = buttonsAppendTo.call(this);\n    } else {\n      $to = this.$element.find(buttonsAppendTo);\n    }\n    this.$buttons = this.$buttons.appendTo($to);\n  }\n\n  updateButtons() {\n    const classes = this.options.classes.button;\n    const $back = this.$buttons.find('[data-wizard=\"back\"]');\n    const $next = this.$buttons.find('[data-wizard=\"next\"]');\n    const $finish = this.$buttons.find('[data-wizard=\"finish\"]');\n\n    if (this._current === 0) {\n      $back.addClass(classes.disabled);\n    } else {\n      $back.removeClass(classes.disabled);\n    }\n\n    if (this._current === this.lastIndex()) {\n      $next.addClass(classes.hide);\n      $finish.removeClass(classes.hide);\n    } else {\n      $next.removeClass(classes.hide);\n      $finish.addClass(classes.hide);\n    }\n  }\n\n  updateSteps() {\n    $.each(this.steps, (i, step) => {\n      if (i > this._current) {\n        step.leave('error');\n        step.leave('active');\n        step.leave('done');\n\n        if (!this.options.enableWhenVisited) {\n          step.enter('disabled');\n        }\n      }\n    });\n  }\n\n  keydown(e) {\n    if (/input|textarea/i.test(e.target.tagName)) {\n      return;\n    }\n\n    switch (e.which) {\n      case 37:\n        this.back();\n        break;\n      case 39:\n        this.next();\n        break;\n      default:\n        return;\n    }\n\n    e.preventDefault();\n  }\n\n  trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  get(index) {\n    if (typeof index === 'string' && index.substring(0, 1) === '#') {\n      const id = index.substring(1);\n      for (const i in this.steps) {\n        if (this.steps[i].$pane.attr('id') === id) {\n          return this.steps[i];\n        }\n      }\n    }\n\n    if (index < this.length() && this.steps[index]) {\n      return this.steps[index];\n    }\n\n    return null;\n  }\n\n  goTo(index, callback) {\n    if (index === this._current || this.transitioning === true) {\n      return false;\n    }\n\n    const current = this.current();\n    const to = this.get(index);\n\n    if (index > this._current) {\n      if (!current.validate()) {\n        current.leave('done');\n        current.enter('error');\n\n        return -1;\n      }\n      current.leave('error');\n\n      if (index > this._current) {\n        current.enter('done');\n      }\n    }\n\n    const that = this;\n    const process = () => {\n      that.trigger('beforeChange', current, to);\n      that.transitioning = true;\n\n      current.hide();\n      to.show(function () {\n        that._current = index;\n        that.transitioning = false;\n        this.leave('disabled');\n\n        that.updateButtons();\n        that.updateSteps();\n\n        if (that.options.autoFocus) {\n          const $input = this.$pane.find(':input');\n          if ($input.length > 0) {\n            $input.eq(0).focus();\n          } else {\n            this.$pane.focus();\n          }\n        }\n\n        if ($.isFunction(callback)) {\n          callback.call(that);\n        }\n\n        that.trigger('afterChange', current, to);\n      });\n    };\n\n    if (to.loader) {\n      to.load(() => {\n        process();\n      });\n    } else {\n      process();\n    }\n\n    return true;\n  }\n\n  length() {\n    return this.steps.length;\n  }\n\n  current() {\n    return this.get(this._current);\n  }\n\n  currentIndex() {\n    return this._current;\n  }\n\n  lastIndex() {\n    return this.length() - 1;\n  }\n\n  next() {\n    if (this._current < this.lastIndex()) {\n      const from = this._current,\n        to = this._current + 1;\n\n      this.goTo(to, function () {\n        this.trigger('next', this.get(from), this.get(to));\n      });\n    }\n\n    return false;\n  }\n\n  back() {\n    if (this._current > 0) {\n      const from = this._current,\n        to = this._current - 1;\n\n      this.goTo(to, function () {\n        this.trigger('back', this.get(from), this.get(to));\n      });\n    }\n\n    return false;\n  }\n\n  first() {\n    return this.goTo(0);\n  }\n\n  finish() {\n    if (this._current === this.lastIndex()) {\n      const current = this.current();\n      if (current.validate()) {\n        this.trigger('finish');\n        current.leave('error');\n        current.enter('done');\n      } else {\n        current.enter('error');\n      }\n    }\n  }\n\n  reset() {\n    this._current = 0;\n\n    $.each(this.steps, (i, step) => {\n      step.reset();\n    });\n\n    this.trigger('reset');\n  }\n\n  static setDefaults(options) {\n    $.extend(true, DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\n$(document).on('click', '[data-wizard]', function (e) {\n  'use strict';\n  let href;\n  const $this = $(this);\n  const $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, ''));\n\n  const wizard = $target.data(NAMESPACE$1);\n\n  if (!wizard) {\n    return;\n  }\n\n  const method = $this.data(NAMESPACE$1);\n\n  if (/^(back|next|first|finish|reset)$/.test(method)) {\n    wizard[method]();\n  }\n\n  e.preventDefault();\n});\n\nvar info = {\n  version:'0.4.4'\n};\n\nconst NAMESPACE = 'wizard';\nconst OtherWizard = $.fn.wizard;\n\nconst jQueryWizard = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new wizard(this, options));\n    }\n  });\n};\n\n$.fn.wizard = jQueryWizard;\n\n$.wizard = $.extend({\n  setDefaults: wizard.setDefaults,\n  noConflict: function() {\n    $.fn.wizard = OtherWizard;\n    return jQueryWizard;\n  }\n}, info);\n"]}